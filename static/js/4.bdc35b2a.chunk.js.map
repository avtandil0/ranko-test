{"version":3,"sources":["components/MiddleBlock/styles.js","components/MiddleBlock/index.js"],"names":["MiddleBlock","styled","section","p","div","SvgIcon","lazy","Tabs","TabPane","withTranslation","title","content","button","t","isAuthorize","setIsAuthorize","setInProfileMOde","useState","show1","setShow1","productType","setProductType","productTypeName","setProductTypeName","setIncomeSource","statement","setStatement","currentUser","setCurrentUser","sentLoading","setSentLoading","agroType","setAgroType","validated","setValidated","visibleLoginRegisterDialog","setVisibleLoginRegisterDialog","useEffect","a","us","JSON","parse","localStorage","getItem","userId","id","axios","get","constants","API_PREFIX","params","token","result1","data","agreeTerms","setAgreeTerms","sendStatement","event","preventDefault","stopPropagation","document","body","style","overflow","height","currentTarget","checkValidity","post","result","isSuccess","showModal","text","meessage","indexOf","substring","link","length","setAppAnswer","handleChangeRadio","e","target","onDialog","index","loantypeId","AntModal","warning","isModalVisible","setIsModalVisible","appAnswer","okText","cancelButtonProps","hidden","visible","onOk","onCancel","type","onClick","window","open","LoginModal","justify","align","bottom","display","flexWrap","justifyContent","maxWidth","className","minWidth","backgroundColor","color","src","Modal","show","onHide","size","Header","closeButton","Title","Body","Form","noValidate","onSubmit","Check","inline","label","name","defaultChecked","checked","onChange","BusinessLoan","ConsumerLoan","AgroLoan","MortgageLoan","AutoLeasing","CreditCard","icon","CheckOutlined","disabled","marginTop","htmlType","loading","Footer"],"mappings":"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","file":"static/js/4.bdc35b2a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MiddleBlock = styled.section`\r\n  position: relative;\r\n  padding: 7.5rem 0 3rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 5.5rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  padding: 0.75rem 0 0.75rem;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  max-width: 570px;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import { useState, Fragment, lazy, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  message,\r\n  Col,\r\n  Tabs,\r\n  Checkbox,\r\n  Button as AntdButton,\r\n  Modal as AntModal,\r\n} from \"antd\";\r\n\r\n\r\nimport { CheckOutlined,\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport * as S from \"./styles\";\r\nimport \"./index.css\"; // Tell webpack that Button.js uses these styles\r\nimport axios from \"axios\";\r\nimport { ConsumerLoan } from \"../LoanTypes/ConsumerLoan\";\r\nimport { MortgageLoan } from \"../LoanTypes/MortgageLoan\";\r\nimport { BusinessLoan } from \"../LoanTypes/BusinessLoan\";\r\nimport { AgroLoan } from \"../LoanTypes/AgroLoan\";\r\nimport { CreditCard } from \"../LoanTypes/CreditCard\";\r\nimport { AutoLeasing } from \"../LoanTypes/AutoLeasing\";\r\nimport LoginModal from \"../../common/LoginModal\";\r\n// import  ComponentA  from '../LoanTypes'\r\nimport constants from '../../constants'\r\n\r\nconst Button = lazy(() => import(\"../../common/Button\"));\r\nconst SvgIcon = lazy(() => import(\"../../common/SvgIcon\"));\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst MiddleBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  t,\r\n  isAuthorize,\r\n  setIsAuthorize,\r\n  setInProfileMOde\r\n}) => {\r\n  const [show1, setShow1] = useState(false);\r\n  const [productType, setProductType] = useState(false);\r\n  const [productTypeName, setProductTypeName] = useState(\"\");\r\n  const [show2, setShow2] = useState(false);\r\n  const [show3, setShow3] = useState(false);\r\n  const [show4, setShow4] = useState(false);\r\n  const [incomeSource, setIncomeSource] = useState([]);\r\n  const [workExperiance, setWorkExperiance] = useState([]);\r\n  const [regions, setRegions] = useState([]);\r\n  const [municipals, setMunicipals] = useState([]);\r\n  const [controledMunicipals, setControledMunicipals] = useState([]);\r\n  const [statement, setStatement] = useState({});\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [sentLoading, setSentLoading] = useState(false);\r\n  const [agroType, setAgroType] = useState(\"physical\");\r\n  const [overlay, setOverlay] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  const [deposit, setDeposit] = useState(0);\r\n\r\n  const [user, setUser] = useState();\r\n  const [loginLoading, setLoginLoading] = useState(false);\r\n  const [visibleLoginRegisterDialog, setVisibleLoginRegisterDialog] =\r\n    useState(false);\r\n  const [registerLoading, setRegisterLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    // Good!\r\n    let us = JSON.parse(localStorage.getItem(\"user\"));\r\n    // document.cookie=`token=${us?.token}`\r\n    // setUser(localStorage.getItem('user'))\r\n    setCurrentUser(us);\r\n\r\n    setStatement({ ...statement, userId: us?.id });\r\n\r\n    // axios.interceptors.request.use(function(config) {\r\n    //   if (us) {\r\n    //     config.params = {token: us?.token};\r\n    //   }\r\n    //    console.log('aaaxxxxsiooooooos', config)\r\n    //   return config;\r\n    // }, function(err)  {\r\n    //   return Promise.reject(err);\r\n    // });\r\n\r\n    // axios.defaults.withCredentials = true\r\n\r\n\r\n    // let par = {params: {token: us.token}}\r\n    // console.log('parparparpar',par)\r\n    var result1 = await axios.get(constants.API_PREFIX +`/api/IncomeSource`,\r\n    {\r\n      params: {\r\n        token: us?.token\r\n      }\r\n    });\r\n    setIncomeSource(result1.data);\r\n    // var result2 = await axios.get(constants.API_PREFIX +`/api/WorkExperience`);\r\n    // console.log(\"result WorkExperience\", result2);\r\n    // setWorkExperiance(result2.data);\r\n\r\n    // var regionsRes = await axios.get(constants.API_PREFIX +`/api/Region`);\r\n    // console.log(\"result regions\", regionsRes);\r\n    // setRegions(regionsRes.data);\r\n\r\n    // var municipalsRes = await axios.get(constants.API_PREFIX +`/api/Municipal`);\r\n    // console.log(\"result municipals\", municipalsRes);\r\n    // setMunicipals(municipalsRes.data);\r\n  }, []);\r\n\r\n\r\n  const [agreeTerms, setAgreeTerms] = useState(false)\r\n  const onChangeTermAgree = (e) => {\r\n    setAgreeTerms(e.target.checked)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n\r\n    handleLogin();\r\n    const form = event.currentTarget;\r\n    // if (form.checkValidity() === false) {\r\n    //   console.log('33333333')\r\n    //   event.preventDefault();\r\n    //   event.stopPropagation();\r\n    // }\r\n    setValidated(true);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleKeypress = (e) => {\r\n    //it triggers by pressing the enter key\r\n    // if (e.charCode === 13) {\r\n    //   if (!user.userName || !user.password) {\r\n    //     return;\r\n    //   }\r\n    //   // handleLogin();\r\n    // }\r\n  };\r\n\r\n  const onClickRegister = async (event) => {\r\n    setValidated(true);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const form = event.currentTarget;\r\n\r\n    if (user?.password != user?.rePassword) {\r\n      message.error(\"პაროლი და დასტური უნდა ემთხვეოდეს ერთმანეთს\");\r\n      return;\r\n    }\r\n\r\n    if (form.checkValidity() === false) {\r\n      return;\r\n    }\r\n\r\n    // console.log('valdiate', Object.entries(user))\r\n    // var result  = await axios.post('https://avtandil-002-site2.ftempurl.com/api/Registration', user)\r\n    setRegisterLoading(true);\r\n    var result = await axios.post(constants.API_PREFIX +`/api/account`, user,\r\n    {\r\n      params: {\r\n        token: currentUser?.token\r\n      }\r\n    });\r\n    if (result.data.isSuccess) {\r\n      message.success(result.data.meessage);\r\n      setVisibleLoginRegisterDialog(false);\r\n      setRegisterLoading(false);\r\n      setUser({\r\n        ...user,\r\n        userName: \"\",\r\n        password: \"\",\r\n        phoneNumber: \"\",\r\n        rePassword: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        lastName: \"\",\r\n        personalId: \"\",\r\n        birthDate: \"\",\r\n        address: \"\",\r\n      });\r\n      setValidated(false);\r\n    } else {\r\n      message.error(result.data.meessage);\r\n      setRegisterLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!user?.userName || !user?.password) {\r\n      setValidated(true);\r\n      return;\r\n    }\r\n    setLoginLoading(true);\r\n    var result = await axios.get(\r\n      constants.API_PREFIX +`/api/account/${user.userName}/${user.password}`,\r\n      {\r\n        params: {\r\n          token: currentUser?.token\r\n        }\r\n      }\r\n      // {\r\n      //   params: { ...user },\r\n      // }\r\n    );\r\n    if (result.data.token) {\r\n      // message.success(result.data.meessage);\r\n      localStorage.setItem(\"user\", JSON.stringify(result.data));\r\n      window.location.reload();\r\n      return;\r\n      setVisibleLoginRegisterDialog(false);\r\n      setIsAuthorize(true);\r\n      setCurrentUser(result.data);\r\n      setUser({ ...user, userName: \"\", password: \"\" });\r\n      setValidated(false);\r\n      window.location.reload();\r\n    } else {\r\n      message.error(\"მომხმარებელი ან პაროლი არასწორია\");\r\n    }\r\n    setLoginLoading(false);\r\n  };\r\n\r\n  const handleChangeInputUser = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeInput = (e) => {\r\n    if (e.target.name == \"regionId\") {\r\n      var cc = [...municipals.filter((r) => r.regionId == e.target.value)];\r\n\r\n      setControledMunicipals([...cc]);\r\n    }\r\n    // setStatement({...statement, deposit: res})\r\n    //10%\r\n    setStatement({ ...statement, [e.target.name]: e.target.value });\r\n\r\n    //setStatement({...statement, kk: res})\r\n    if (e.target.name == \"term\" || e.target.name == \"requestedAmount\") {\r\n      let t;\r\n      let r;\r\n      if (e.target.name == \"requestedAmount\") {\r\n        t = statement.term;\r\n        r = e.target.value;\r\n      }\r\n      if (e.target.name == \"term\") {\r\n        t = e.target.value;\r\n        r = statement.requestedAmount;\r\n      }\r\n      let per = 1 / 100;\r\n      let x = Math.pow(1 + per, t);\r\n      var res = r / ((1 - 1 / x) / per);\r\n      setDeposit(res.toFixed(2));\r\n    }\r\n\r\n  };\r\n\r\n  const sendStatement = async (event) => {\r\n    setValidated(true);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    document.body.style.overflow = 'auto';\r\n    document.body.style.height = 'auto';\r\n\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      return;\r\n    }\r\n\r\n    setSentLoading(true);\r\n    var result = await axios.post(constants.API_PREFIX + `/api/Home`, statement,\r\n    {\r\n      params: {\r\n        token: currentUser?.token\r\n      }\r\n    });\r\n    setSentLoading(false);\r\n    setShow1(false);\r\n    if(result.data.isSuccess){\r\n\r\n      showModal()\r\n\r\n      let text = result.data.meessage.indexOf('http') < 0? \r\n      result.data.meessage : result.data.meessage.substring(0,result.data.meessage.indexOf('http')) ;\r\n\r\n      let link = result.data.meessage.indexOf('http') < 0? \r\n        null\r\n        : result.data.meessage.substring(result.data.meessage.indexOf('http'),result.data.meessage.length);\r\n      setAppAnswer({\r\n        text: text,\r\n        link: link\r\n      })\r\n      // AntModal.success({\r\n      //   content: result.data.meessage,\r\n      // });\r\n      // setInProfileMOde(true)\r\n    }\r\n\r\n    document.body.style.overflow = 'auto';\r\n    document.body.style.height = 'auto';\r\n    // message.success(result.data.meessage);\r\n  };\r\n\r\n  const scrollTo = (id) => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const handleChangeRadio = (e) => {\r\n    setAgroType(e.target.id);\r\n  };\r\n\r\n  const handleChangeOverlay = (e) => {\r\n    setOverlay(e.target.checked);\r\n  };\r\n\r\n  const creditCard = () => {\r\n    return (\r\n      <>\r\n        {consumerLoan()}\r\n        {/* <div className=\"form-group col-md-6\">\r\n          <label for=\"inputPassword4\">მოთხოვნილი ლიმიტი</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"inputPassword4\"\r\n            placeholder=\"მოთხოვნილი ლიმიტი\"\r\n            name=\"requiredLimit\"\r\n            value={statement?.requiredLimit}\r\n            onChange={handleChangeInput}\r\n          />\r\n        </div> */}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const agroLoan = () => {\r\n    return <>{agroType == \"physical\" ? consumerLoan() : businessLoan()}</>;\r\n  };\r\n\r\n  const autoLeasing = () => {\r\n    return (\r\n      <>\r\n        {consumerLoan()}\r\n        <br></br>\r\n        <Card border=\"info\" style={{ width: \"49rem\" }}>\r\n          <Card.Header>ინფორმაცია ავტომობილზე</Card.Header>\r\n          <Card.Body>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">ავტომობილის ღირებულება</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"ავტომობილის ღირებულება\"\r\n                  name=\"carCost\"\r\n                  value={statement?.carCost}\r\n                  onChange={handleChangeInput}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">ავტომობილის მარკა</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"ავტომობილის მარკა\"\r\n                  name=\"CarMake\"\r\n                  value={statement?.CarMake}\r\n                  onChange={handleChangeInput}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">ავტომობილის გამოშვების წელი</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\" ავტომობილის გამოშვების წელი\"\r\n                  name=\"vehicleYear\"\r\n                  value={statement?.vehicleYear}\r\n                  onChange={handleChangeInput}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const mortgageLoan = () => {\r\n    return (\r\n      <>\r\n        {consumerLoan()}\r\n        <br></br>\r\n        <Card border=\"info\" style={{ width: \"49rem\" }}>\r\n          <Card.Header>ინფორმაცია იპოთეკაზე</Card.Header>\r\n          <Card.Body>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">თანამსესხებელი</label>\r\n                <select\r\n                  id=\"inputState\"\r\n                  className=\"form-control\"\r\n                  name=\"coBorrowerRelative\"\r\n                  value={statement?.coBorrowerRelative}\r\n                  onChange={handleChangeInput}\r\n                >\r\n                  <option selected>აირჩიეთ...</option>\r\n                  <option>მშობელი</option>\r\n                  <option>შვილი</option>\r\n                  <option>მეუღლე</option>\r\n                  <option>და-ძმა</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">თანამსესხებლის ხელფასი</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"თანხა\"\r\n                  name=\"coBorrowerSalary\"\r\n                  value={statement?.coBorrowerSalary}\r\n                  onChange={handleChangeInput}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">შესაძენი ქონების ღირებულება</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"შესაძენი ქონების ღირებულება\"\r\n                  name=\"propertyCost\"\r\n                  value={statement?.propertyCost}\r\n                  onChange={handleChangeInput}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">ზუსტი მიზნობრიობა (აღწერა)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"ზუსტი მიზნობრიობა (აღწერა)\"\r\n                  name=\"purpose\"\r\n                  value={statement?.purpose}\r\n                  onChange={handleChangeInput}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  };\r\n  const businessLoan = () => {\r\n    return (\r\n      <>\r\n        <Card border=\"info\" style={{ width: \"49rem\" }}>\r\n          <Card.Header>კომპანიის შესახებ</Card.Header>\r\n          <Card.Body>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">\r\n                  კომპანიის დასახელება<span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"კომპანიის დასახელება\"\r\n                  name=\"borrowerName\"\r\n                  value={statement?.borrowerName}\r\n                  onChange={handleChangeInput}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  მოითითეთ კომპანიის დასახელება.\r\n                </Form.Control.Feedback>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">\r\n                  საიდენტიფიკაციო ნომერი<span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"საიდენტიფიკაციო ნომერი\"\r\n                  name=\"taxcode\"\r\n                  value={statement?.taxcode}\r\n                  onChange={handleChangeInput}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  საიდენტიფინაციო ნომერი.\r\n                </Form.Control.Feedback>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <br></br>\r\n        {/* <div className=\"form-group col-md-6\">\r\n          <label for=\"inputPassword4\">ბიზნესის გამოცდილება</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputPassword4\"\r\n            placeholder=\"ბიზნესის გამოცდილება\"\r\n            name=\"businessExperience\"\r\n            onChange={handleChangeInput}\r\n          />\r\n        </div> */}\r\n        {consumerLoan()}\r\n      </>\r\n    );\r\n  };\r\n  const consumerLoan = () => {\r\n    return (\r\n      <>\r\n        <Card border=\"info\" style={{ width: \"49rem\" }}>\r\n          <Card.Header>მოთხოვნილი პროდუქტი</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text>\r\n              <div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"col-md-4\">\r\n                    <label for=\"inputEmail4\">\r\n                      მოთხოვნილი თანხა <span style={{ color: \"red\" }}>*</span>\r\n                    </label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      id=\"inputEmail4\"\r\n                      placeholder=\"თანხა\"\r\n                      name=\"requestedAmount\"\r\n                      value={statement?.requestedAmount}\r\n                      onChange={handleChangeInput}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      მიუთითეთ მოთხოვნილი თანხა.\r\n                    </Form.Control.Feedback>\r\n                  </div>\r\n                  <div className=\" col-md-2\">\r\n                    <label for=\"inputEmail4\">\r\n                      ვალუტა<span style={{ color: \"red\" }}>*</span>\r\n                    </label>\r\n                    <select\r\n                      id=\"inputcurrency\"\r\n                      className=\"form-control\"\r\n                      name=\"currency\"\r\n                      value={statement?.currency}\r\n                      onChange={handleChangeInput}\r\n                    >\r\n                      <option selected>GEL</option>\r\n                      <option>USD</option>\r\n                      <option>EUR</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\" col-md-2\">\r\n                    {statement?.loantypeId != 5 ? (\r\n                      <>\r\n                        <label for=\"inputPassword4\">\r\n                          ვადა (თვე)1<span style={{ color: \"red\" }}>*</span>\r\n                        </label>\r\n                        <input\r\n                          required\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          id=\"inputPassword4\"\r\n                          placeholder=\"ვადა\"\r\n                          name=\"term\"\r\n                          value={statement?.term}\r\n                          onChange={handleChangeInput}\r\n                        />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          მიუთითეთ ვადა.\r\n                        </Form.Control.Feedback>\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  <div className=\" col-md-4\">\r\n                    {statement?.loantypeId != 5 ? (\r\n                      <>\r\n                        <label for=\"inputPassword4\">შენატანი (სავარაუდო)</label>\r\n                        <input\r\n                          disabled\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          id=\"inputPassword4\"\r\n                          placeholder=\"შენატანი\"\r\n                          name=\"deposit\"\r\n                          value={deposit}\r\n                          // onChange={handleChangeInput}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        <br></br>\r\n\r\n        <Card border=\"info\" style={{ width: \"49rem\" }}>\r\n          <Card.Header>შემოსავლები</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-5\">\r\n                  <label for=\"inputPassword4\">\r\n                    თვიური საშუალო შემოსავალი\r\n                    <span style={{ color: \"red\" }}>*</span>\r\n                  </label>\r\n                  <input\r\n                    required\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"inputPassword4\"\r\n                    placeholder=\"შემოსავალი\"\r\n                    name=\"monthlyAverageIncome\"\r\n                    value={statement?.monthlyAverageIncome}\r\n                    onChange={handleChangeInput}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ თვიური საშუალო შემოსავალი.\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"form-group col-md-3\">\r\n                  <label for=\"inputState\">\r\n                    შემოსავლის წყარო <span style={{ color: \"red\" }}>*</span>\r\n                  </label>\r\n                  <Form.Control\r\n                    required\r\n                    as=\"select\"\r\n                    id=\"inputState\"\r\n                    className=\"form-control\"\r\n                    name=\"incomeSourceId\"\r\n                    value={statement?.incomeSourceId}\r\n                    onChange={handleChangeInput}\r\n                  >\r\n                    <option></option>\r\n                    {incomeSource.map((s) => (\r\n                      <option key={s.id} name={s.id} value={s.id}>\r\n                        {s.incomeSourceName}\r\n                      </option>\r\n                    ))}\r\n                    ;\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ თვიური საშუალო შემოსავალი.\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  {statement?.loantypeId == 3 ||\r\n                  (statement?.loantypeId == 4 && agroType == \"legal\") ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      {/* {statement?.incomeSourceId == 7 ? ( */}\r\n                      <>\r\n                        {/* <label for=\"inputPassword4\">\r\n                          სხვა შემოსავლის წყარო\r\n                          <span style={{ color: \"red\" }}>*</span>\r\n                        </label>\r\n                        <input\r\n                          disabled={statement?.incomeSourceId != 7}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"inputPassword4\"\r\n                          placeholder=\"სხვა შემოსავლის წყარო\"\r\n                          name=\"otherIncomeSource\"\r\n                          value={statement?.otherIncomeSource}\r\n                          onChange={handleChangeInput}\r\n                        /> */}\r\n                      </>\r\n                      {/* ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {statement?.loantypeId == 3 ||\r\n                (statement?.loantypeId == 4 && agroType == \"legal\") ? (\r\n                  \"\"\r\n                ) : (\r\n                  <>\r\n                    <div className=\"form-group col-md-5\">\r\n                      <label for=\"inputState\">\r\n                        სად გერიცხებათ ხელფასი\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                      </label>\r\n                      <select\r\n                        required\r\n                        id=\"inputState\"\r\n                        className=\"form-control\"\r\n                        name=\"IncomeAccrue\"\r\n                        value={statement?.IncomeAccrue}\r\n                        onChange={handleChangeInput}\r\n                      >\r\n                        <option selected></option>\r\n                        <option>ბანკში</option>\r\n                        <option>ხელზე</option>\r\n                      </select>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        მიუთითეთ სად გერიცებათ ხელფასი.\r\n                      </Form.Control.Feedback>\r\n                    </div>\r\n                    {/* <div className=\"form-group col-md-7\">\r\n                      <label for=\"inputState\">\r\n                        სამუშო გამოცდილება - სტაჟი\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                      </label>\r\n                      <select\r\n                        required\r\n                        id=\"inputState\"\r\n                        className=\"form-control\"\r\n                        name=\"workExperienceId\"\r\n                        value={statement?.workExperienceId}\r\n                        onChange={handleChangeInput}\r\n                      >\r\n                        <option selected></option>\r\n                        {workExperiance.map((s) => (\r\n                          <option key={s.id} name={s.id} value={s.id}>\r\n                            {s.workExperienceName}\r\n                          </option>\r\n                        ))}\r\n                        ;\r\n                      </select>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        მიუთითეთ სტაჟი.\r\n                      </Form.Control.Feedback>\r\n                    </div> */}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n\r\n        <Card border=\"info\" style={{ width: \"49rem\" }}>\r\n          <Card.Header>დამატებითი ინფორმაცია</Card.Header>\r\n          <Card.Body>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">\r\n                  ფაქტიური მისამართი<span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <select\r\n                      required\r\n                      id=\"inputState\"\r\n                      className=\"form-control\"\r\n                      name=\"regionId\"\r\n                      value={statement?.regionId}\r\n                      onChange={handleChangeInput}\r\n                    >\r\n                      <option selected></option>\r\n                      {regions.map((s) => (\r\n                        <option key={s.id} name={s.id} value={s.id}>\r\n                          {s.regionName}\r\n                        </option>\r\n                      ))}\r\n                      ;\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <select\r\n                      required\r\n                      id=\"inputState\"\r\n                      className=\"form-control\"\r\n                      name=\"municipalId\"\r\n                      value={statement?.municipalId}\r\n                      onChange={handleChangeInput}\r\n                    >\r\n                      <option selected></option>\r\n                      {controledMunicipals.map((s) => (\r\n                        <option key={s.id} name={s.id} value={s.id}>\r\n                          {s.municipalName}\r\n                        </option>\r\n                      ))}\r\n                      ;\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  მიუთითეთ მისამართი.\r\n                </Form.Control.Feedback>\r\n                {/* <input\r\n            required\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputPassword4\"\r\n            placeholder=\"ფაქტიური მისამართი\"\r\n            name=\"actualAddress\"\r\n            onChange={handleChangeInput}\r\n            value={statement?.actualAddress}\r\n          /> */}\r\n\r\n                {/* <Form.Control.Feedback type=\"invalid\">\r\n            მიუთითეთ ფაქტიური მისამართი.\r\n          </Form.Control.Feedback> */}\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">\r\n                  სხვა არსებული სესხები (ჯამურად)\r\n                  <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"ჯამი\"\r\n                  name=\"existingLoans\"\r\n                  onChange={handleChangeInput}\r\n                  value={statement?.existingLoans}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  სხვა არსებული სესხები (ჯამურად).\r\n                </Form.Control.Feedback>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputPassword4\">\r\n                  რამდენს იხდით სესხებში ყოველთვიურად?\r\n                  <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  placeholder=\"თანხა\"\r\n                  name=\"montlyPaidAmount\"\r\n                  onChange={handleChangeInput}\r\n                  value={statement?.montlyPaidAmount}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  სხვა არსებული სესხები (ჯამურად).\r\n                </Form.Control.Feedback>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label for=\"inputState\">\r\n                  {\" \"}\r\n                  თქვენი საკრედიტო ისტორია{\" \"}\r\n                  <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <select\r\n                  required\r\n                  id=\"inputState\"\r\n                  className=\"form-control\"\r\n                  name=\"currentOverdue\"\r\n                  onChange={handleChangeInput}\r\n                  value={statement?.currentOverdue}\r\n                >\r\n                  <option selected></option>\r\n                  <option value={1}>მაქვს ვადაგადაცილება</option>\r\n                  <option value={0}>არ მაქვს ვადაგადაცილება</option>\r\n                </select>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  აირჩიეთ .\r\n                </Form.Control.Feedback>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label>\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={overlay}\r\n                    onChange={handleChangeOverlay}\r\n                  />{\" \"}\r\n                  აპირებთ თუ არა გადაფარვას?{\" \"}\r\n                </label>\r\n              </div>\r\n              {overlay ? (\r\n                <>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      id=\"inputPassword4\"\r\n                      placeholder=\"თანხა\"\r\n                      name=\"overlayAmount\"\r\n                      onChange={handleChangeInput}\r\n                      value={statement?.overlayAmount}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  };\r\n  const onDialog = (index) => {\r\n    if (!isAuthorize) {\r\n      // message.warning('განცხადების შესატანად გაიარეთ ავტორიზაცია');\r\n      // notification['info']({\r\n      //   message: 'შეცდომა !',\r\n      //   description:\r\n      //     'განცხადების შესატანად გაიარეთ ავტორიზაცია.',\r\n      //     placement: 'bottomRight'\r\n      // });\r\n      // AntModal.warning({\r\n      //   title: \"შეცდომა\",\r\n      //   content: \"განცხადების შესავსებად გაიარეთ ავტორიზაცია\",\r\n      //   oklButtonProps: { style: { display: \"none\" } },\r\n      // });\r\n      // console.log(777777);\r\n\r\n      setVisibleLoginRegisterDialog(true);\r\n      return;\r\n    }\r\n\r\n    if(index == 3){\r\n      AntModal.warning({\r\n        content: 'პროდუქტი მალე დაემატება',\r\n      });\r\n\r\n      return;\r\n    }\r\n    setProductType(index);\r\n    setShow1(true);\r\n\r\n\r\n    if (statement.loantypeId == index) {\r\n      setStatement({\r\n        ...statement,\r\n        [\"loantypeId\"]: index,\r\n        [\"currency\"]: \"GEL\",\r\n      });\r\n    } else {\r\n      setStatement({\r\n        userId: currentUser?.id,\r\n        [\"loantypeId\"]: index,\r\n        [\"currency\"]: \"GEL\",\r\n      });\r\n    }\r\n\r\n    switch (index) {\r\n      case 1:\r\n        setProductTypeName(\"სამომხმარებლო\");\r\n        break;\r\n      case 2:\r\n        setProductTypeName(\"იპოთეკური\");\r\n        break;\r\n      case 3:\r\n        setProductTypeName(\"ბიზნეს სესხი\");\r\n        break;\r\n      case 4:\r\n        setProductTypeName(\"აგრო\");\r\n        break;\r\n      case 5:\r\n        setProductTypeName(\"საკრედიტო ბარათები\");\r\n        break;\r\n      case 6:\r\n        setProductTypeName(\"ავტო სესხი\");\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [appAnswer, setAppAnswer] = useState({});\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <S.MiddleBlock id=\"products\">\r\n\r\n    <AntModal         \r\n      okText=\"დახურვა\"\r\n       cancelButtonProps={{ hidden: true}}\r\n       visible={isModalVisible} \r\n       onOk={handleOk} onCancel={handleCancel}>\r\n        <p>{appAnswer?.text}</p>\r\n        <AntdButton type=\"link\" onClick={() => window.open(appAnswer?.link)}>{appAnswer?.link}</AntdButton>\r\n        {/* <a onClick={() => window.open(appAnswer?.link)}>{appAnswer?.link}</a> */}\r\n      </AntModal>\r\n\r\n<LoginModal \r\n      visibleLoginRegisterDialog={visibleLoginRegisterDialog}\r\n      setVisibleLoginRegisterDialog={setVisibleLoginRegisterDialog}\r\n      setInProfileMOde={setInProfileMOde}\r\n      isAuthorize={isAuthorize}\r\n      setIsAuthorize={setIsAuthorize}\r\n      />\r\n      {/* <AntModal\r\n        visible={visibleLoginRegisterDialog}\r\n        onCancel={() => setVisibleLoginRegisterDialog(false)}\r\n        footer={null}\r\n        width={800}\r\n      >\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"ავტორიზაცია\" key=\"1\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  მომხმარებლის სახელი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                    placeholder=\"მომხმარებლის სახელი\"\r\n                    value={user?.userName}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ სახელი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  პაროლი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"პაროლი\"\r\n                    required\r\n                    name=\"password\"\r\n                    value={user?.password}\r\n                    onChange={handleChangeInputUser}\r\n                    onKeyPress={handleKeypress}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ პაროლი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}></Form.Label>\r\n                <Col lg={12}>\r\n                  <AntdButton htmlType=\"submit\" loading={loginLoading}>\r\n                    შესვლა\r\n                  </AntdButton>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </TabPane>\r\n          <TabPane tab=\"რეგისტრაცია\" key=\"2\">\r\n            <Form noValidate validated={validated} onSubmit={onClickRegister}>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  მობილურის ნომერი111111111\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"მობილურის ნომერი\"\r\n                    name=\"phoneNumber\"\r\n                    value={user?.phoneNumber}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ სახელი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  მომხმარებლის სახელი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                    placeholder=\"მომხმარებლის სახელი\"\r\n                    value={user?.userName}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ სახელი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  პაროლი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"პაროლი\"\r\n                    value={user?.password}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    პაროლი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  გაიმეორეთ პაროლი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    name=\"rePassword\"\r\n                    placeholder=\"გაიმეორეთ პაროლი\"\r\n                    value={user?.rePassword}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    გაიმეორეთ პაროლი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  ელ. ფოსტა\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\" ელ. ფოსტა\"\r\n                    value={user?.email}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ ელ. ფოსტა.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  სახელი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"სახელი\"\r\n                    value={user?.name}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ სახელი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  გვარი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"გვარი\"\r\n                    value={user?.lastName}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ გვარი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  პირადი ნომერი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"personalId\"\r\n                    placeholder=\"პირადი ნომერი\"\r\n                    value={user?.personalId}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ პირადი ნომერი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  დაბადების თარიღი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  \r\n                  <Form.Control\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    type=\"date\"\r\n                    name=\"birthDate\"\r\n                    placeholder=\"დაბადების თარიღი\"\r\n                    value={user?.birthDate}\r\n                    onChange={handleChangeInputUser}\r\n                    isValid={user?.birthDate != null}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}>\r\n                  მისამართი\r\n                </Form.Label>\r\n                <Col lg={16}>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    placeholder=\"მისამართი\"\r\n                    value={user?.address}\r\n                    onChange={handleChangeInputUser}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    მიუთითეთ მისამართი.\r\n                  </Form.Control.Feedback>\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n\r\n              <br></br>\r\n              <Row>\r\n                <Form.Label column lg={3}></Form.Label>\r\n                <Col lg={12}>\r\n                  <AntdButton htmlType=\"submit\" loading={registerLoading}>\r\n                    რეგისტრაცია\r\n                  </AntdButton>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </TabPane>\r\n        </Tabs>\r\n      </AntModal> */}\r\n\r\n      <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n        <Fade bottom>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              justifyContent: \"space-around\",\r\n              maxWidth: 1000,\r\n            }}\r\n          >\r\n            <div>\r\n              <div\r\n                className=\"card border-dark mb-3\"\r\n                style={{\r\n                  maxWidth: \"18rem\",\r\n                  minWidth: \"18rem\",\r\n                  height: \"19rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#2e186a\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                >\r\n                  {t(\"ConsumerLoan\")}\r\n                </div>\r\n                <div className=\"card-body text-dark\">\r\n                  {/* <h5 className=\"card-title\">Dark card title</h5> */}\r\n                  <SvgIcon src=\"RANKO_ICONS-1.svg\" height=\"110px\" />\r\n                  <p className=\"card-text\">{t(\"ConsumerLoanDesc\")}</p>\r\n                  <span\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => onDialog(1)}\r\n                  >\r\n                    <span>{t(\"ApplyNow\")}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div\r\n                className=\"card border-dark mb-3\"\r\n                style={{\r\n                  maxWidth: \"18rem\",\r\n                  minWidth: \"18rem\",\r\n                  height: \"19rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{ backgroundColor: \"#2e186a\", color: \"#fff\" }}\r\n                >\r\n                  {t(\"Mortgage\")}\r\n                </div>\r\n                <div className=\"card-body text-dark\">\r\n                  {/* <h5 className=\"card-title\">Dark card title</h5> */}\r\n                  <SvgIcon src=\"RANKO_ICONS-2.svg\" height=\"110px\" />\r\n                  <p className=\"card-text\">{t(\"MortgageDesc\")}</p>\r\n                  <span\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => onDialog(2)}\r\n                  >\r\n                    <span>{t(\"ApplyNow\")}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div\r\n                className=\"card border-dark mb-3\"\r\n                style={{\r\n                  maxWidth: \"18rem\",\r\n                  minWidth: \"18rem\",\r\n                  height: \"19rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{ backgroundColor: \"#2e186a\", color: \"#fff\" }}\r\n                >\r\n                  {t(\"BusinessLoan\")}\r\n                </div>\r\n                <div className=\"card-body text-dark\">\r\n                  {/* <h5 className=\"card-title\">Dark card title</h5> */}\r\n                  <SvgIcon src=\"RANKO_ICONS-3.svg\" height=\"110px\" />\r\n                  <p className=\"card-text\">{t(\"BusinessLoanDesc\")}</p>\r\n                  <span\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => onDialog(3)}\r\n                  >\r\n                    <span>{t(\"ApplyNow\")}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div\r\n                className=\"card border-dark mb-3\"\r\n                style={{\r\n                  maxWidth: \"18rem\",\r\n                  minWidth: \"18rem\",\r\n                  height: \"19rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{ backgroundColor: \"#2e186a\", color: \"#fff\" }}\r\n                >\r\n                  {t(\"AgroLoan\")}\r\n                </div>\r\n                <div className=\"card-body text-dark\">\r\n                  {/* <h5 className=\"card-title\">Dark card title</h5> */}\r\n                  <SvgIcon src=\"RANKO_ICONS-4.svg\" height=\"110px\" />\r\n                  <p className=\"card-text\">{t(\"AgroLoanDesc\")}</p>\r\n                  <span\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => onDialog(4)}\r\n                  >\r\n                    <span>{t(\"ApplyNow\")}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <div\r\n                className=\"card border-dark mb-3\"\r\n                style={{\r\n                  maxWidth: \"18rem\",\r\n                  minWidth: \"18rem\",\r\n                  height: \"19rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{ backgroundColor: \"#2e186a\", color: \"#fff\" }}\r\n                >\r\n                  {t(\"CreditCard\")}\r\n                </div>\r\n                <div className=\"card-body text-dark\">\r\n                  {/* <h5 className=\"card-title\">Dark card title</h5> */}\r\n                  <SvgIcon src=\"RANKO_ICONS-5.svg\" height=\"110px\" />\r\n                  <p className=\"card-text\">{t(\"CreditCard\")}</p>\r\n                  <span\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => onDialog(5)}\r\n                  >\r\n                    <span>{t(\"ApplyNow\")}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <div\r\n                className=\"card border-dark mb-3\"\r\n                style={{\r\n                  maxWidth: \"18rem\",\r\n                  minWidth: \"18rem\",\r\n                  height: \"19rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{ backgroundColor: \"#2e186a\", color: \"#fff\" }}\r\n                >\r\n                  {t(\"AutoLeasing\")}\r\n                </div>\r\n                <div className=\"card-body text-dark\">\r\n                  {/* <h5 className=\"card-title\">Dark card title</h5> */}\r\n                  <SvgIcon src=\"RANKO_ICONS-6.svg\" height=\"110px\" />\r\n                  <p className=\"card-text\">{t(\"AutoLeasing\")}</p>\r\n                  <span\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => onDialog(6)}\r\n                  >\r\n                    <span> {t(\"ApplyNow\")}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n\r\n          <section id=\"pricing\" className=\"bg-white\">\r\n            <div className=\"container\">\r\n              {/* <h2 className=\"text-center\">პროდუქტები</h2> */}\r\n\r\n           \r\n\r\n              <div className=\"row\">\r\n                {/* სამომხმარებლოს მოდალი */}\r\n                <Modal show={show1} onHide={() => setShow1(false)} size=\"lg\">\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{productTypeName}</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <Form\r\n                      noValidate\r\n                      validated={validated}\r\n                      onSubmit={sendStatement}\r\n                    >\r\n                      <div>\r\n                        {productType == 4 ? (\r\n                          <>\r\n                            <div key={`inline-1`} className=\"mb-3\">\r\n                              <Form.Check\r\n                                inline\r\n                                label=\"ფიზიკური პირი\"\r\n                                name=\"group1\"\r\n                                type=\"radio\"\r\n                                id=\"physical\"\r\n                                defaultChecked\r\n                                checked={agroType === \"physical\"}\r\n                                onChange={(e) => handleChangeRadio(e)}\r\n                              />\r\n                              <Form.Check\r\n                                inline\r\n                                label=\"იურიდიული პირი\"\r\n                                name=\"group1\"\r\n                                type=\"radio\"\r\n                                id=\"legal\"\r\n                                checked={agroType === \"legal\"}\r\n                                onChange={(e) => handleChangeRadio(e)}\r\n                              />\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"form-row\">\r\n                        {/* {productType == 3 ? businessLoan() : \"\"} */}\r\n                        {productType == 3 ? (\r\n                          <BusinessLoan\r\n                            statement={statement}\r\n                            setStatement={setStatement}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n\r\n                        {/* {productType == 1 ? consumerLoan() : \"\"} */}\r\n                        {productType == 1 ? (\r\n                          <ConsumerLoan\r\n                            statement={statement}\r\n                            setStatement={setStatement}\r\n                            setValidated={setValidated}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n\r\n                        {/* {productType == 4 ? agroLoan() : \"\"} */}\r\n                        {productType == 4 ? (\r\n                          <AgroLoan\r\n                            statement={statement}\r\n                            setStatement={setStatement}\r\n                            agroType={agroType}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n\r\n                        {/* {consumerLoan()} */}\r\n                        {/* {productType == 2 ? mortgageLoan() : \"\"} */}\r\n                        {productType == 2 ? (\r\n                          <MortgageLoan\r\n                            statement={statement}\r\n                            setStatement={setStatement}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n\r\n                        {/* {productType == 6 ? autoLeasing() : \"\"} */}\r\n                        {productType == 6 ? (\r\n                          <AutoLeasing\r\n                            statement={statement}\r\n                            setStatement={setStatement}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n\r\n                        {/* {productType == 5 ? creditCard() : \"\"} */}\r\n                        {productType == 5 ? (\r\n                          <CreditCard\r\n                            statement={statement}\r\n                            setStatement={setStatement}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                      <br></br>\r\n\r\n                      <Checkbox checked={agreeTerms} onChange={onChangeTermAgree}> ვეთანხმები </Checkbox>\r\n\r\n                      <AntdButton type=\"link\" onClick={() => window.open('/privacy')}>\r\n                          წესებსა და პირობებებს\r\n                        </AntdButton>\r\n<br/>\r\n                      <AntdButton\r\n                      icon={<CheckOutlined />}\r\n                      disabled={!agreeTerms}\r\n                      style={{marginTop:20}}\r\n                        // onClick={sendStatement}\r\n                        htmlType=\"submit\"\r\n                        type=\"primary\"\r\n                        loading={sentLoading}\r\n                      >\r\n                        გაგზავნა\r\n                      </AntdButton>\r\n                    </Form>\r\n                  </Modal.Body>\r\n                  <Modal.Footer></Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Fade>\r\n      </Row>\r\n    </S.MiddleBlock>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MiddleBlock);\r\n"],"sourceRoot":""}